/**
 * @fileoverview gRPC-Web generated client stub for app.trainlcd.grpc
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.1
// 	protoc              v4.23.3
// source: stationapi.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as stationapi_pb from './stationapi_pb';


export class StationAPIClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorGetStationById = new grpcWeb.MethodDescriptor(
    '/app.trainlcd.grpc.StationAPI/GetStationById',
    grpcWeb.MethodType.UNARY,
    stationapi_pb.GetStationByIdRequest,
    stationapi_pb.SingleStationResponse,
    (request: stationapi_pb.GetStationByIdRequest) => {
      return request.serializeBinary();
    },
    stationapi_pb.SingleStationResponse.deserializeBinary
  );

  getStationById(
    request: stationapi_pb.GetStationByIdRequest,
    metadata: grpcWeb.Metadata | null): Promise<stationapi_pb.SingleStationResponse>;

  getStationById(
    request: stationapi_pb.GetStationByIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: stationapi_pb.SingleStationResponse) => void): grpcWeb.ClientReadableStream<stationapi_pb.SingleStationResponse>;

  getStationById(
    request: stationapi_pb.GetStationByIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: stationapi_pb.SingleStationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/app.trainlcd.grpc.StationAPI/GetStationById',
        request,
        metadata || {},
        this.methodDescriptorGetStationById,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/app.trainlcd.grpc.StationAPI/GetStationById',
    request,
    metadata || {},
    this.methodDescriptorGetStationById);
  }

  methodDescriptorGetStationsByGroupId = new grpcWeb.MethodDescriptor(
    '/app.trainlcd.grpc.StationAPI/GetStationsByGroupId',
    grpcWeb.MethodType.UNARY,
    stationapi_pb.GetStationByGroupIdRequest,
    stationapi_pb.MultipleStationResponse,
    (request: stationapi_pb.GetStationByGroupIdRequest) => {
      return request.serializeBinary();
    },
    stationapi_pb.MultipleStationResponse.deserializeBinary
  );

  getStationsByGroupId(
    request: stationapi_pb.GetStationByGroupIdRequest,
    metadata: grpcWeb.Metadata | null): Promise<stationapi_pb.MultipleStationResponse>;

  getStationsByGroupId(
    request: stationapi_pb.GetStationByGroupIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: stationapi_pb.MultipleStationResponse) => void): grpcWeb.ClientReadableStream<stationapi_pb.MultipleStationResponse>;

  getStationsByGroupId(
    request: stationapi_pb.GetStationByGroupIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: stationapi_pb.MultipleStationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/app.trainlcd.grpc.StationAPI/GetStationsByGroupId',
        request,
        metadata || {},
        this.methodDescriptorGetStationsByGroupId,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/app.trainlcd.grpc.StationAPI/GetStationsByGroupId',
    request,
    metadata || {},
    this.methodDescriptorGetStationsByGroupId);
  }

  methodDescriptorGetStationsByCoordinates = new grpcWeb.MethodDescriptor(
    '/app.trainlcd.grpc.StationAPI/GetStationsByCoordinates',
    grpcWeb.MethodType.UNARY,
    stationapi_pb.GetStationByCoordinatesRequest,
    stationapi_pb.MultipleStationResponse,
    (request: stationapi_pb.GetStationByCoordinatesRequest) => {
      return request.serializeBinary();
    },
    stationapi_pb.MultipleStationResponse.deserializeBinary
  );

  getStationsByCoordinates(
    request: stationapi_pb.GetStationByCoordinatesRequest,
    metadata: grpcWeb.Metadata | null): Promise<stationapi_pb.MultipleStationResponse>;

  getStationsByCoordinates(
    request: stationapi_pb.GetStationByCoordinatesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: stationapi_pb.MultipleStationResponse) => void): grpcWeb.ClientReadableStream<stationapi_pb.MultipleStationResponse>;

  getStationsByCoordinates(
    request: stationapi_pb.GetStationByCoordinatesRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: stationapi_pb.MultipleStationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/app.trainlcd.grpc.StationAPI/GetStationsByCoordinates',
        request,
        metadata || {},
        this.methodDescriptorGetStationsByCoordinates,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/app.trainlcd.grpc.StationAPI/GetStationsByCoordinates',
    request,
    metadata || {},
    this.methodDescriptorGetStationsByCoordinates);
  }

  methodDescriptorGetStationsByLineId = new grpcWeb.MethodDescriptor(
    '/app.trainlcd.grpc.StationAPI/GetStationsByLineId',
    grpcWeb.MethodType.UNARY,
    stationapi_pb.GetStationByLineIdRequest,
    stationapi_pb.MultipleStationResponse,
    (request: stationapi_pb.GetStationByLineIdRequest) => {
      return request.serializeBinary();
    },
    stationapi_pb.MultipleStationResponse.deserializeBinary
  );

  getStationsByLineId(
    request: stationapi_pb.GetStationByLineIdRequest,
    metadata: grpcWeb.Metadata | null): Promise<stationapi_pb.MultipleStationResponse>;

  getStationsByLineId(
    request: stationapi_pb.GetStationByLineIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: stationapi_pb.MultipleStationResponse) => void): grpcWeb.ClientReadableStream<stationapi_pb.MultipleStationResponse>;

  getStationsByLineId(
    request: stationapi_pb.GetStationByLineIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: stationapi_pb.MultipleStationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/app.trainlcd.grpc.StationAPI/GetStationsByLineId',
        request,
        metadata || {},
        this.methodDescriptorGetStationsByLineId,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/app.trainlcd.grpc.StationAPI/GetStationsByLineId',
    request,
    metadata || {},
    this.methodDescriptorGetStationsByLineId);
  }

  methodDescriptorGetStationsByName = new grpcWeb.MethodDescriptor(
    '/app.trainlcd.grpc.StationAPI/GetStationsByName',
    grpcWeb.MethodType.UNARY,
    stationapi_pb.GetStationsByNameRequest,
    stationapi_pb.MultipleStationResponse,
    (request: stationapi_pb.GetStationsByNameRequest) => {
      return request.serializeBinary();
    },
    stationapi_pb.MultipleStationResponse.deserializeBinary
  );

  getStationsByName(
    request: stationapi_pb.GetStationsByNameRequest,
    metadata: grpcWeb.Metadata | null): Promise<stationapi_pb.MultipleStationResponse>;

  getStationsByName(
    request: stationapi_pb.GetStationsByNameRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: stationapi_pb.MultipleStationResponse) => void): grpcWeb.ClientReadableStream<stationapi_pb.MultipleStationResponse>;

  getStationsByName(
    request: stationapi_pb.GetStationsByNameRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: stationapi_pb.MultipleStationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/app.trainlcd.grpc.StationAPI/GetStationsByName',
        request,
        metadata || {},
        this.methodDescriptorGetStationsByName,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/app.trainlcd.grpc.StationAPI/GetStationsByName',
    request,
    metadata || {},
    this.methodDescriptorGetStationsByName);
  }

  methodDescriptorGetStationsByLineGroupId = new grpcWeb.MethodDescriptor(
    '/app.trainlcd.grpc.StationAPI/GetStationsByLineGroupId',
    grpcWeb.MethodType.UNARY,
    stationapi_pb.GetStationsByLineGroupIdRequest,
    stationapi_pb.MultipleStationResponse,
    (request: stationapi_pb.GetStationsByLineGroupIdRequest) => {
      return request.serializeBinary();
    },
    stationapi_pb.MultipleStationResponse.deserializeBinary
  );

  getStationsByLineGroupId(
    request: stationapi_pb.GetStationsByLineGroupIdRequest,
    metadata: grpcWeb.Metadata | null): Promise<stationapi_pb.MultipleStationResponse>;

  getStationsByLineGroupId(
    request: stationapi_pb.GetStationsByLineGroupIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: stationapi_pb.MultipleStationResponse) => void): grpcWeb.ClientReadableStream<stationapi_pb.MultipleStationResponse>;

  getStationsByLineGroupId(
    request: stationapi_pb.GetStationsByLineGroupIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: stationapi_pb.MultipleStationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/app.trainlcd.grpc.StationAPI/GetStationsByLineGroupId',
        request,
        metadata || {},
        this.methodDescriptorGetStationsByLineGroupId,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/app.trainlcd.grpc.StationAPI/GetStationsByLineGroupId',
    request,
    metadata || {},
    this.methodDescriptorGetStationsByLineGroupId);
  }

  methodDescriptorGetTrainTypesByStationId = new grpcWeb.MethodDescriptor(
    '/app.trainlcd.grpc.StationAPI/GetTrainTypesByStationId',
    grpcWeb.MethodType.UNARY,
    stationapi_pb.GetTrainTypesByStationIdRequest,
    stationapi_pb.MultipleTrainTypeResponse,
    (request: stationapi_pb.GetTrainTypesByStationIdRequest) => {
      return request.serializeBinary();
    },
    stationapi_pb.MultipleTrainTypeResponse.deserializeBinary
  );

  getTrainTypesByStationId(
    request: stationapi_pb.GetTrainTypesByStationIdRequest,
    metadata: grpcWeb.Metadata | null): Promise<stationapi_pb.MultipleTrainTypeResponse>;

  getTrainTypesByStationId(
    request: stationapi_pb.GetTrainTypesByStationIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: stationapi_pb.MultipleTrainTypeResponse) => void): grpcWeb.ClientReadableStream<stationapi_pb.MultipleTrainTypeResponse>;

  getTrainTypesByStationId(
    request: stationapi_pb.GetTrainTypesByStationIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: stationapi_pb.MultipleTrainTypeResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/app.trainlcd.grpc.StationAPI/GetTrainTypesByStationId',
        request,
        metadata || {},
        this.methodDescriptorGetTrainTypesByStationId,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/app.trainlcd.grpc.StationAPI/GetTrainTypesByStationId',
    request,
    metadata || {},
    this.methodDescriptorGetTrainTypesByStationId);
  }

}

